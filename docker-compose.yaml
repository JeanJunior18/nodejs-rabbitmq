
version: "3"

services:
  rabbitmq:
    image: "rabbitmq:3.8-management-alpine"
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - "./.rabbitmq_data:/var/lib/rabbitmq/mnesia"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    healthcheck:
        test: "exit 0"

  nodejs-server:
    build: server
    command: npm run serve
    container_name: nodejs-rabbitmq-server
    ports:
      - "3333:3333"
    volumes:
      - ./server:/opt/nodejs-rabbitmq
    depends_on: 
      - rabbitmq
    links: 
      - rabbitmq

  nodejs-client0:
    build: client
    command: npm run serve
    container_name: nodejs-rabbitmq-client0
    ports:
      - "3000:3000"
    volumes:
      - ./client:/opt/nodejs-rabbitmq
    environment:
      - PORT=3000
      - HOSTNAME=client0
    depends_on: 
      rabbitmq:
        condition: service_healthy
    links: 
      - rabbitmq
    

  nodejs-client1:
    build: client
    command: npm run serve
    container_name: nodejs-rabbitmq-client1
    ports:
      - "3001:3001"
    volumes:
      - ./client:/opt/nodejs-rabbitmq
    environment:
      - PORT=3001
      - HOSTNAME=client1
    depends_on: 
      rabbitmq:
        condition: service_healthy
    links: 
      - rabbitmq

  nodejs-client2:
    build: client
    command: npm run serve
    container_name: nodejs-rabbitmq-client2
    ports:
      - "3002:3002"
    volumes:
      - ./client:/opt/nodejs-rabbitmq
    environment:
      - PORT=3002
      - HOSTNAME=client2
    depends_on: 
      rabbitmq:
        condition: service_healthy
    links: 
      - rabbitmq